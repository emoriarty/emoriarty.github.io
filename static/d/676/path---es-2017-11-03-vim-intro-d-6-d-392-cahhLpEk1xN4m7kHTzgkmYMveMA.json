{"data":{"config":{"html":"<p>El blog personal de Enrique Arias.\n<br />\n<span style=\"font-size: 0.9em; color: gray;\">Desarrollador y escritor ocasional entre otras cosas.</span></p>","fields":{"slug":"/es/"},"frontmatter":{"title":"Apuntes nocturnos","language":"es"}},"markdownRemark":{"id":"444043de-57e9-5a3e-89c9-14c707f91af1","excerpt":"{% progressive_picture\n  src:  https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Vimlogo.svg/1022px-Vimlogo.svg.png \n  height: 102…","html":"<p>{% progressive_picture\nsrc: <a href=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Vimlogo.svg/1022px-Vimlogo.svg.png\">https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Vimlogo.svg/1022px-Vimlogo.svg.png</a>\nheight: 1024\nwidth: 1022\nalt: ‘Logo de vim.’\nclass: ‘picture-shrink’ %}</p>\n<p>Entiendo que si has llegado hasta aquí es porque tienes cierto interés en saber <em>vim</em> y quieres aprender a manejarlo, o que ni tan siquiera sepas lo que es (aunque lo dudo) y hayas abierto este artículo por azar. Sea cual sea el caso, antes de empezar me gustaría que supieras que este artículo lo he enfocado para que puedas hacerte una idea generalizada sobre el editor. Por lo tanto no es esperes encontrar un tutorial al uso o una manual de referencia.</p>\n<p>En la primera parte se explican las características de <em>vim</em> y su diferencia con el resto de editores. En el apartado de instalación y configuración se introducen una serie de comandos útiles para que puedas al menos comenzar a trastear con <em>vim</em> sin que te frustres (créeme que si no conoces los cuatro comandos básicos te puedes volver loco). Por último verás cuales son los diferentes modos de edición.</p>\n<p>Sería interesante que pudieras leer esto mientras tienes abierto un terminal donde ir probando <em>vim</em>.</p>\n<p>Si deseas saber más puedes usar como referencia los enlaces al final del artículo.</p>\n<p>¡Bien! Ahora que ya sabes de qué va esto, ponte cómodo y a leer.</p>\n<h2>Introducción</h2>\n<p>Hay muchos editores de texto entre los que elegir. Muchos de ellos llevan mucho tiempo siendo usados y tienen el reconocimiento de la comunidad. Otros son más recientes pero están sido muy bien acogidos. Aunque al final las diferencias entre unos y otros dependen de dos factores: rendimiento y <em>features</em> exclusivas. Aparte de estas dos características, la elección entre será totalmente subjetiva. De hecho, no importa el editor que escogas, la mayoría de las acciones estarán situadas en los mismos lugares. Lo cual facilita el cambio entre ellos. Posiblemente si esto no fuera así nadie cambiaría el editor con el que empezó.</p>\n<p>A diferencia de la mayoría de editores está <em>vim</em>. Básicamente este programa funciona sobre una consola de comandos (no corre sobre un entorno gráfico). Todas sus acciones se basan en comandos de teclado (ausencia de ratón). Y sus diferentes modos de edición (<em>normal</em>, <em>input</em>, <em>visual</em>) que más adelante verás. Solo estas tres características pueden ahuyentar al profano.</p>\n<p>La pregunta que te puedes estar haciendo es ¿por qué usar <em>vim</em> si voy a tener que aprender desde cero para manejarlo? Pues bien, reconozco que al principio cuesta adaptarse a un editor como <em>vim</em> donde nada está donde uno espera. Para que te hagas una idea de cuán distinto es, observa la imagen a continuación. Observa que interfaz tan minimalista.</p>\n<p>{% progressive_picture\nthumbnail: /assets/vim-intro-1.thumb.jpg\nsrc: /assets/vim-intro-1.jpg\nheight: 962\nwidth: 1490\nalt: ‘Interfaz de vim.’ %}</p>\n<p>Si tras ver una pantalla completamente en negro sigues con ganas de darle una oportunidad, lo primero que deberías saber es que su curva de aprendizaje es de semanas, incluso meses. Una vez haya pasado este tiempo y tras un uso regular encontrarás todo su potencial. Por ejemplo, comprobarás lo rápido que es tener todas las acciones más comunes bajo los dedos o comandos más complejos mediante combinaciones de teclas.</p>\n<p>Otros de los beneficios de <em>vim</em> es que puedes usarlo en entornos en remoto a través de conexiones <em>SSH</em> que no ofrecen una interfaz gráfica. Si por algún motivo la conexión fuese lenta, <em>vim</em> encadenaría las acciones tecleadas y las ejecutaría cuando pudiese en el mismo orden sin que se perdieran ¿No es genial esto? De hecho al funcionar sobre un terminal evita un consumo de recursos de sistema mayor, como lo haría cualquier otro editor en un entorno gráfico. Por supuesto, existen variantes de <em>vim</em> que se pueden usar en un entorno gráfico, aunque entonces perdería la gracia.</p>\n<p>Si te asusta lo de no poder usar el ratón no debes preocuparte. <em>vim</em> ofrece la posibilidad de habilitarlo añadiendo un parámetro en su configuración. Tras reiniciarlo podrás usar el ratón al igual que en cualquier entorno gráfico. Como comprobarás <em>vim</em> es altamente configurable.</p>\n<p>También puedes abrir diferentes pestañas donde poder mantener los archivos abiertos mientras editas otro.</p>\n<p>{% progressive_picture\nthumbnail: /assets/vim-intro-2.thumb.jpg\nsrc: /assets/vim-intro-2.jpg\nheight: 318\nwidth: 748\nalt: ‘Pestañas en vim.’ %}</p>\n<p>Otra característica muy interesante que permite <em>vim</em> es poder dividir la ventana con diferentes archivos.</p>\n<p>{% progressive_picture\nthumbnail: /assets/vim-intro-3.thumb.jpg\nsrc: /assets/vim-intro-3.jpg\nheight: 1296\nwidth: 1920\nalt: ‘Ventanas partias en vim.’ %}</p>\n<p>Por otro lado también incorpora un explorador de carpetas. Algo rudimentario pero funcional al fin y al cabo. Aunque esta opción la acabarás sustituyendo por un plugin como <a href=\"https://github.com/scrooloose/nerdtree\"><em>NERDTree</em></a>. Una solución mucho más completa que el navegador por defecto.</p>\n<p>Otra particularidad de <em>vim</em> es la amplia gama de <em>plugins</em> y librerías adicionales que existen. La mayoría de estas son mantenidas por una comunidad muy activa, garantizando su usabilidad a largo plazo. Si quieres ver algunos ejemplos entra en <a href=\"https://vimawesome.com/\"><em>vimawesome.com</em></a>.</p>\n<p>Como puedes ver, <em>vim</em> es un editor que ofrece las mismas posibilidades sino más que otros. Su gran dificultad es su curva de aprendizaje pero si has llegado hasta aquí imagino que sigues teniendo cierto interés en aprender a manejarlo. Si es así entonces el siguiente paso es instalarlo y configurarlo.</p>\n<h2>Instalación y Configuración</h2>\n<p><em>Vim</em> se puede instalar de varias maneras diferentes, al igual que cualquier otro programa. Para los usuarios de Windows lo más normal es descargar un archivo instalable y lanzarlo. Para el resto de sistemas basados en UNIX lo más sencillo es utilizar un gestor de paquetes e instalarlo desde ahí. Mac tampoco deja de ser un UNIX aunque no viene con un gestor instalado por defecto (bueno, existe el <em>App Store</em> pero no vale). Para poder instalar las diferentes librerías de manera automática te recomiendo instalar uno. El más extendido hoy día es <a href=\"https://brew.sh/\"><em>homebrew</em></a>, echa un vistazo a su página y sigue los pasos para instalarlo.</p>\n<p>La otra opción es ir a la <a href=\"http://www.vim.org/download.php\"><em>página oficial de descargas de vim</em></a> y bajarlo.</p>\n<p>Una vez lo hayas instalado abre una consola de comandos o terminal y teclea la siguiente orden.</p>\n<p>{% highlight shell %}\n$ vim\n{% endhighlight %}</p>\n<p>Este comando abrirá el programa mostrando la siguiente pantalla.</p>\n<p>{% progressive_picture\nthumbnail: /assets/vim-intro-4.thumb.jpg\nsrc: /assets/vim-intro-4.jpg\nheight:880\nwidth: 1452\nalt: ‘Pantalla de inicio de vim.’ %}</p>\n<p>Como antes dije, el ratón no funciona aunque se puede activar. Además también habrás comprobado que no puedes escribir. Esto se debe a que <em>vim</em> por defecto arranca con el modo <em>normal</em> activado. Más adelante veremos que es eso de los modos.</p>\n<p>Para poder escribir todo lo que tienes que hacer es pulsar la tecla <kbd>i</kbd>. A continuación puedes ver que el cursor ha cambiado y en la parte inferior de la pantalla pegado a la izquierda ha aparecido el texto {% ihighlight shell %}— INSERT —{% endihighlight %}. Esto indica que ha cambiado de modo y ya puedes escribir como lo harías en un editor común.</p>\n<p>Para activar el ratón primero pulsa <kbd>esc</kbd> para regresar al modo normal. Sabrás que estás en el modo normal porque el texto insert inferior habrá desaparecido. Ahora pulsa la tecla <kbd>:</kbd>. Puedes observar que donde apareció el texto {% ihighlight shell %}— INSERT —{% endihighlight %} muestra ahora dos puntos. Esto indica que puedes escribir los comandos que actuarán sobre el texto. Básicamente el modo <em>normal</em> de <em>vim</em> es cómo trabajar con el texto de un archivo como si fuera un terminal, lanzando acciones que modifican el texto.</p>\n<p>A continuación de estos dos puntos introduces el siguiente comando y pulsas <kbd>Enter</kbd>. Tras esto ya podrás usar el ratón.</p>\n<p>{% highlight shell %}\n:set mouse=a\n{% endhighlight %}</p>\n<p>El único problema es que cuando cierres <em>vim</em> este parámetro no se mantendrá. Para que este cambio no se pierda y tengas que volver a declararlo debes editar un archivo con el nombre {% ihighlight shell %}.vimrc{% endihighlight %}. En ocasiones en Windows puede que este archivo sea nombrado como{% ihighlight shell %}_vimrc{% endihighlight %}.</p>\n<p>Una forma de averiguar este nombre es tecleando {% ihighlight shell %}:version{% endihighlight %}. Esto muestra la versión de <em>vim</em>, las <em>features</em> incluidas y el nombre de archivo de configuración entre otras cosas. En la imagen inferior puedes ver el resultado de este comando.</p>\n<p>{% progressive_picture\nthumbnail: /assets/vim-intro-5.thumb.jpg\nsrc: /assets/vim-intro-5.jpg\nheight: 1022\nwidth: 1442\nalt: ‘Pantalla de inicio de vim.’ %}</p>\n<p>Para hallar el nombre del archivo de configuración debes buscar el texto <em>user vimrc file</em>. Lo más común es que el texto a la derecha de los dos puntos sea {% ihighlight shell %}$HOME/.vimrc{% endihighlight %}. Si no fuese así al menos ya sabrías cómo nombrar archivo de configuración. </p>\n<p>Lo normal es que no exista este archivo así que tendrás que crearlo. Si queremos que todos los cambios sean permanentes en cualquier ruta donde se ejecute <em>vim</em> este archivo se deberá instalar donde apunte la variable de sistema {% ihighlight shell %}$HOME{% endihighlight %}. Un aspecto interesante sobre la configuración de <em>vim</em> es que estas propiedades pueden ser sobreescritas si en el directorio donde se ejecuta el programa existe otro {% ihighlight shell %}.vimrc{% endihighlight %}. Por lo tanto prevalecen los parámetros en este último archivo de configuración.</p>\n<p>Dicho esto, teclea desde <em>vim</em> el siguiente comando.</p>\n<p>{% highlight shell %}\n:echo $HOME\n{% endhighlight %}</p>\n<p>El resultado del comando es la ruta donde guardar el archivo {% ihighlight shell %}.vimrc{% endihighlight %} o el nombre que especifique <em>vim</em>.</p>\n<p>A continuación edita ese archivo con la siguiente orden (siempre desde <em>vim</em>).</p>\n<p>{% highlight shell %}\n:e! $HOME/.vimrc\n{% endhighlight %}</p>\n<p>Si existe el archivo mostrará una serie de parámetros de configuración en cada nueva línea. En caso contrario estará vacío. Pulsa <kbd>o</kbd> para añadir un línea nueva justo debajo del cursor y cambiar al modo <em>insert</em>. Escribe el mismo comando que ejecutaste para habilitar el ratón ({% ihighlight shell %}set mouse=a{% endihighlight %}). Lo siguiente es guardar el archivo mediante la acción {% ihighlight shell %}:wq{% endihighlight %}. <kbd>w</kbd> sirve para guardar el documento y <kbd>q</kbd> para salir. Tras esto podrás usar el ratón en <em>vim</em> como en entorno gráfico.</p>\n<p>Otra forma más rápida y sencilla sería ejecutar {% ihighlight shell %} :echo $MYVIMRC {% endihighlight %}. Esto muestra la ruta y el archivo donde se halla la confirguración de <em>vim</em>.</p>\n<p>A partir de ahora cualquier cambio que desees aplicar de forma permanente en <em>vim</em> deberás escribirlo en este archivo. Por ejemplo podrás cambiar el esquema de colores, configurar el tabulador o el tipo de fuente, cambiar las acciones o instalar <a href=\"https://vim.zeef.com/andrew.krawchyk\"><em>plugins</em></a>. Aunque para esto último sería mejor optar por un gestor de plugins cómo <a href=\"https://github.com/VundleVim/Vundle.vim\">Vundle</a> o <a href=\"https://github.com/junegunn/vim-plug\">vim-plug</a>. Hay un hilo interesante en <a href=\"https://www.reddit.com/r/vim/comments/4qo7ur/which_plugin_installer_or_vim_package_manager/\">reddit</a> donde poder saber que opción elegir.</p>\n<p>Por último <a href=\"http://vimdoc.sourceforge.net/htmldoc/quickref.html#option-list\">aquí</a> puedes ver la lista completa de opciones de configuración. Aunque si lo prefieres puedes usar este otro <a href=\"https://dougblack.io/words/a-good-vimrc.html\">enlace</a> mucho más sucinto y explicativo.</p>\n<h2>Los modos de <em>vim</em></h2>\n<p>Vim ofrece la posibilidad de trabajar con el texto de tres maneras diferentes: <em>normal</em>, <em>insert</em> y <em>visual</em>.</p>\n<h3><em>normal</em></h3>\n<p>Este es el modo por defecto nada más abrir <em>vim</em>. Cómo podrás observar si lo tienes abierto no permite la edición del texto, al menos cómo lo harías en cualquier editor. Aunque no es cierto que no se pueda editar. Todos las acciones de edición son ejecutadas a través de un comando asociado a un botón del teclado. Por ejemplo, borrar un carácter se haría con la letra <kbd>x</kbd>.</p>\n<p>Muchas de estas acciones pueden ser usadas en combinación con comandos de movimiento y repetición. Un ejemplo sería al pulsar la tecla <kbd>3</kbd> le estaríamos indicando a <em>vim</em> que ejecute la siguiente acción tres veces. Por lo tanto usado en combinación con <kbd>x</kbd> —<kbd>3</kbd><kbd>x</kbd>— se borrarán los tres siguientes caracteres hacia la derecha. </p>\n<p>Otro ejemplo combinatorio sería <kbd>3</kbd><kbd>d</kbd><kbd>l</kbd>. En este caso tendrías el mismo resultado que en el ejemplo anterior. Al igual que <kbd>x</kbd>, <kbd>d</kbd> también se utiliza para borrar pero con la diferencia que espera un comando de movimiento/dirección.</p>\n<p>Los comandos de movimiento originales son <kbd>h</kbd><kbd>j</kbd><kbd>k</kbd><kbd>l</kbd>. Esto es así debido a que el creador de <a href=\"https://es.wikipedia.org/wiki/Vi\"><em>vi</em></a> (<em>vim</em> es una versión mejorada de <em>vi</em> como especifican sus siglas, Vi IMproved) lo hizo con <a href=\"http://www.catonmat.net/blog/why-vim-uses-hjkl-as-arrow-keys/\">terminal ADM-3A</a> a mediados de los 70 y desde entonces se ha mantenido.\nAbajo puedes ver los diferentes movimientos.</p>\n<table class=\"arrows-table table-half\">\n  <tbody>\n    <tr>\n      <td colspan=\"2\">&#8593;k</td>\n    </tr>\n    <tr>\n      <td>&#8592;h</td>\n      <td>l&#8594;</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">&#8595;j</td>\n    </tr>\n  </tbody>\n</table>\n<p>De todas formas no te abrumes si ves que te cuesta moverte con ellos. Normalmente por defecto también vienen activadas las teclas de dirección.</p>\n<p>Lo recomendable sería usar <kbd>h</kbd><kbd>j</kbd><kbd>k</kbd><kbd>l</kbd> para mover el cursor siempre que estés en modo normal. El motivo no es otro que por comodidad y rapidez. Piensa que si cada vez que quieras mover el cursor debes desplazar la mano hasta donde se encuentran la teclas de dirección. Que este gesto lo hagas un par de veces no pasa nada pero cuando estás durante todo el día trabajando es muy poco práctico retirar la mano cada vez que muevas el cursor. Otro motivo es el tiempo consumido en cada desplazamiento de la mano, aunque este tampoco me parece un motivo de peso, al fin y al cabo no estás todo el día escribiendo a una velocidad endiablada. Por lo tanto, tener todas las acciones posibles bajo los dedos es la opción más eficiente. De hecho, este suele ser el principal motivo por el que un desarrollador utliza <em>vim</em>.</p>\n<p>En definitiva debe quedarte claro que en este modo es donde pasarás la mayor parte del tiempo.</p>\n<h3><em>insert</em></h3>\n<p>Este es el modo de edición que la mayoría de editores ofrecen. Se accede desde el modo mediante alguno de los siguientes comandos.</p>\n<table class=\"commands-table solid-table table-full\">\n  <thead>\n    <tr>\n      <td><b>Acciones</b></td>\n      <td><b>Descripción</b></td>\n    </tr>\n  </thead>\n<tbody>\n<tr>\n<td><kbd>a</kbd></td>\n<td>Inserta texto a la derecha del cursor.</td>\n</tr>\n<tr>\n<td><kbd>i</kbd></td>\n<td>Inserta texto a la izquierda del cursor.</td>\n</tr>\n<tr>\n<td><kbd>A</kbd></td>\n<td>Inserta texto al final de línea donde se halle el cursor.</td>\n</tr>\n<tr>\n<td><kbd>I</kbd></td>\n<td>Inserta al inicio de la línea donde se halle el cursor.</td>\n</tr>\n<tr>\n<td><kbd>C</kbd></td>\n<td>Borra todo lo que se encuntre a la derecha del cursor e inserta al final de la línea.</td>\n</tr>\n<tr>\n<td><kbd>s</kbd></td>\n<td>Borra el carácter debajo del cursor y permite insertar justo en el mismo lugar.</td>\n</tr>\n</tbody>\n</table>\n<p>Cómo habrás observado los comandos son diferentes entre mayúsculas y minúsculas. Esto amplía duplica el abanico de posibilidades de acciones por tecla.</p>\n<p>De este modo no hay mucho que contar (al menos en un texto introductorio). Funciona igual que un editor común, de hecho para mover el cursor aquí usarás las teclas de dirección aunque realmente deberías regresar al modo <em>normal</em> y mover el cursor.</p>\n<p>Al principio lo más probable es que pases más tiempo en este modo. Poco a poco te irás acostumbrando al modo <em>normal</em> y ocasionalmente accederás al modo <em>insert</em> sino es para insertar texto.</p>\n<p>Para regresar al modo normal tan solo hay que teclear escape <kbd>esc</kbd>. De hecho para salir de cualquier modo.</p>\n<h3><em>visual</em></h3>\n<p>Este modo nos permite seleccionar y operar con el texto al igual que harías con otros editores. Aunque, como bien habrás supuesto, en <em>vim</em> hay una serie de particularidades a destacar.</p>\n<p>Vim ofrece 3 modos de selección de texto: <em>visual</em>, <em>linewise</em> o <em>block</em>.</p>\n<h4><em>visual</em></h4>\n<p>Se accede pulsando la tecla <kbd>v</kbd>. La selección del texto se hace moviendo el cursor hacia donde desees con las letras <kbd>h</kbd><kbd>j</kbd><kbd>k</kbd><kbd>l</kbd> o las flechas si lo prefieres. También puedes seleccionar con combinaciones de acciones. Por ejemplo, si tecleas <kbd>v</kbd><kbd>8</kbd><kbd>j</kbd> quedará marcado el texto desde donde se encuentre el cursor hasta 8 líneas más abajo correspondiendo con la misma posición del cursor si es que puede.</p>\n<p>Tras la selección del texto, cualquier acción que ejecutes actuará sobre el mismo.</p>\n<h4><em>linewise</em></h4>\n<p>Para acceder a este modo teclea <kbd>V</kbd>. La diferencia con el modo <em>visual</em> es que opera con líneas de texto enteras.</p>\n<h4><em>block</em></h4>\n<p>Este modo permite seleccionar el texto mediante secciones rectangulares de texto. El acceso se hace mediante las teclas <kbd>Ctrl</kbd><kbd>V</kbd>. Cómo puedes ver en el ejemplo siguiente permite seleccionar por columnas.</p>\n<p>{% progressive_picture\nthumbnail: /assets/vim-intro-6.thumb.jpg\nsrc: /assets/vim-intro-6.jpg\nheight: 1288\nwidth: 1922\nalt: ‘Selección en bloque.’ %}</p>\n<h2>Conclusión</h2>\n<p>Hasta aquí la introducción a <em>vim</em>. Espero que el artículo te haya servido para hacerte una idea de las posibilidades que ofrece este editor. Personalmente hace años que lo utilizo y estoy encantado con su rendimiento. Además de no usar el ratón lo cual es muy <em>cool</em>. Como un hacker de película (que no falte el esnobismo).</p>\n<p>Bromas aparte, si que es cierto que una vez habituado, la ejecución de los comandos más comunes se realizan de forma casi automática y en lo que tardas en pulsar unas teclas.</p>\n<p>Para finalizar y como buen punto de partida te recomiendo que hagas el tutorial instalado conjuntamente con <em>vim</em>, <em>vimtutor</em>. Para saber más sobre éste tan solo debes teclear <a href=\"http://vimdoc.sourceforge.net/htmldoc/usr_01.html#01.3\">{% ihighlight shell %}:help vimtutor{% endihighlight %}</a> desde <em>vim</em>. También puedes consultar toda la documentación oficial en el propio editor teclando {% ihighlight shell %}:help{% endihighlight %}. Aunque probablemente al principio te parezca más cómodo leer el mismo contenido en una <a href=\"http://vimdoc.sourceforge.net/htmldoc/usr_toc.html\">página web</a>. Otro recurso interesante es tener una chuleta al lado para poder consultar rápidamente que comando necesitas. Si buscas <a href=\"https://www.google.es/search?q=vim+cheat+sheet&#x26;oq=vim+cheat+sheet&#x26;aqs=chrome.0.69i59j69i65j69i60l2j0l2.3214j0j4&#x26;sourceid=chrome&#x26;ie=UTF-8\"><em>vim cheat sheet</em> en google</a> encontrarás decenas de ellas.</p>\n<p><a href=\"https://vim-adventures.com/\"><em>Vim Adventures</em></a> es otra opción interesate y divertida donde aprender <em>vim</em> jugando. Si prefieres algo más austero también puedes probar con otros tutoriales interactivos como <a href=\"http://www.openvim.com/\"><em>openvim</em></a> o <a href=\"http://vimgenius.com/\"><em>vimgenius</em></a>.</p>\n<h2>Fuentes</h2>\n<ul>\n<li><a href=\"http://www.vim.org/\">vim.org</a></li>\n<li><a href=\"http://vimdoc.sourceforge.net/htmldoc/usr_toc.html\">vimdoc.sourceforge.net/htmldoc/usr_toc.html</a></li>\n<li><a href=\"https://pragprog.com/book/dnvim2/practical-vim-second-edition\">pragprog.com/book/dnvim2/practical-vim-second-edition</a></li>\n<li><a href=\"http://vimdoc.sourceforge.net/\">vimdoc.sourceforge.net</a></li>\n<li><a href=\"http://vim.wikia.com/wiki/Vim_Tips_Wiki\">vim.wikia.com/wiki/Vim<em>Tips</em>Wiki</a></li>\n<li><a href=\"https://vimawesome.com/\">vimawesome.com</a></li>\n<li><a href=\"http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html\">viemu.com/a<em>vi</em>vim<em>graphical</em>cheat<em>sheet</em>tutorial.html</a></li>\n<li><a href=\"https://vim.rtorr.com/\">vim.rtorr.com</a></li>\n<li><a href=\"https://www.labnol.org/internet/learning-vim-for-beginners/28820/\">labnol.org/internet/learning-vim-for-beginners/28820/</a></li>\n<li><a href=\"http://vimcasts.org/\">vimcasts.org/</a></li>\n</ul>","frontmatter":{"title":"vim: introducción","date":"November 02, 2017","translations":null},"fields":{"readingTime":{"text":"15 min read","minutes":14.67}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/es/2017-11-03-vim-intro/","language":"es","previous":{"fields":{"slug":"/es/2017-04-03-como-crear-un-blog-con-jekyll/"},"frontmatter":{"title":"Cómo crear un blog o sitio web con Jekyll"}},"next":{"fields":{"slug":"/es/2017-12-19-vim-configuracion-inicial/"},"frontmatter":{"title":"vim: configuración básica"}}}}