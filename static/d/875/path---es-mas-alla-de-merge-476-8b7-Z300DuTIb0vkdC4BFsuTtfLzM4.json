{"data":{"config":{"html":"<p>El blog personal de Enrique Arias.\n<br />\n<span style=\"font-size: 0.9em; color: gray;\">Desarrollador y escritor ocasional entre otras cosas.</span></p>","fields":{"slug":"/es/"},"frontmatter":{"title":"Apuntes a medianoche","language":"es"}},"markdownRemark":{"id":"481ebbc7-ad26-5426-88f8-94a5940ccd8d","excerpt":"Cualquiera que haya trabajado algún tiempo con git, irremediablemente sabrá\nque es hacer un  merge . Supongamos que tenemos una rama  A  que…","html":"<p>Cualquiera que haya trabajado algún tiempo con git, irremediablemente sabrá\nque es hacer un <em>merge</em>. Supongamos que tenemos una rama <em>A</em> que sale de master.\nEl comando <code class=\"language-text\">merge</code> traerá los cambios producidos en <em>A</em> a <em>master</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">71a621b <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> master<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> A <span class=\"token function\">file</span> updated\n2dc6065 <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> new A <span class=\"token function\">file</span>\n76a1097 Demo <span class=\"token function\">file</span> updated\na31e004 README updated\n44d4c5b New README <span class=\"token function\">file</span>\nee42779 New demo <span class=\"token function\">file</span></code></pre></div>\n<p>Si todo ha ido bien, los cambios se emplazan por delante en la rama <em>master</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">1———2———3———A1———A2</code></pre></div>\n<p>El registro —<em>log</em>— refleja un orden incremental de los <em>commits</em>, en otras\npalabras, los <em>commits</em> son mostrados en el orden en que son añadidos. Una linea\ntemporal de cambios.</p>\n<p>Cuando estas modificaciones han ocurrido al mismo tiempo en una rama <em>B</em>, lo\ncual no estan raro como parece, la estrategia de fusión —<em>merge</em>— no puede hacer\nuna actualización <em>fast-forward</em> (añadir los cambios por delante).</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">057a856 <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> master<span class=\"token punctuation\">)</span> Merge branch <span class=\"token string\">'B'</span>\n71a621b <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> A <span class=\"token function\">file</span> updated\n1ac6aff <span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> B <span class=\"token function\">file</span> updated\n2dc6065 <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> new A <span class=\"token function\">file</span>\nd657116 <span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> new B <span class=\"token function\">file</span>\n76a1097 Demo <span class=\"token function\">file</span> updated\na31e004 README updated\n44d4c5b New README <span class=\"token function\">file</span>\nee42779 New demo <span class=\"token function\">file</span></code></pre></div>\n<p>Puesto que los cambios ocurrieron en un mismo marco temporal, el comando <code class=\"language-text\">merge</code>\nejecuta una estrategia recursiva, entrelazando los <em>commits</em> de <em>A</em> y <em>B</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">1———2———3———B1———A1———B2———A2</code></pre></div>\n<p>Estos <em>commits</em> entrecruzados no muestran adecuadamente los diferentes bloques\npor rama. Como se puede ver arriba, los <em>commits</em> de <em>B</em> preceden los de <em>A</em>\ncuando en realidad se introdujeron después. Además, los <em>commits</em> no estan\nalineados por significado, todos los <em>commits</em> pertenicientes a <em>A</em> deberían mostrarse\nantes que los de <em>B</em>.</p>\n<p>Para poder prevenir esta situación una vez la <em>feature</em> ha sido completada.\nEn vez de hacer un <em>merge</em> con todos los <em>commits</em> presentes en la rama, la\nsolición es pasar los cambios a <em>master</em> como un único commit junto a un mensaje\ndescriptivo. Este enfoque mejora la trazabilidad del registro de git.</p>\n<p>Quizás para proyectos de menor calado o apuestas personales no sea tan importante\n(aunque siempre es mejor manetener las buenas prácticas) el manetener en\nestricto orden un registro de eventos. Pero cuando se trata de grandes equipos\ndonde cada <em>feature</em> o <em>bug</em> debe estar perfectamente aislado y etiquetado,\nun registro desordenado marcará la diferencia entre el caos y la armonía del\nproyecto.</p>\n<p>Para los recien llegados a git (y también para aquellos que no han tenido mucho\ntiempo para profundizar) hay más opciones aparte del comando <code class=\"language-text\">merge</code>.</p>\n<p>Vamos más allá de <code class=\"language-text\">merge</code>.</p>\n<h2>Rebase</h2>\n<p>A diferencia de <em>merge</em>, <em>rebase</em> permite hacer un <em>merge</em> basado en la propia rama,\nmanteniendo los <em>commits</em> relacionados en un mismo lote.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">1———2———3———A1———A2———B1———A2</code></pre></div>\n<p>Como podemos comprobar arriba, la rama mantiene una linealiad acorde a los bloques\nde trabajo y no por marca temporal. </p>\n<p>Un forma interesante para prevenir conflictos mientras se trabaja en una rama\nnueva, es actualizar el espacio de trabajo actual con los cambios de la rama\norigen.</p>\n<div class=\"gatsby-highlight\" data-language=\"git\"><pre class=\"language-git\"><code class=\"language-git\">git rebase &lt;origin-branch> </code></pre></div>\n<p>Dado el siguiente estado.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">        B1———B2\n       /\nA1———A2———A3———A4</code></pre></div>\n<p>El comando <code class=\"language-text\">rebase</code> permite quitar momentáneamente los commits actuales (los que\nno están presente en la rama de origen), volcar los nuevos commits y vuelve a\nincluir los cambios actuales.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">                  B1———B2\n                 /\nA1———A2———A3———A4</code></pre></div>\n<p>Aunque se pretende actualizar habitualmente la rama de trabajo actual, puede pasar\nque las diferencias entre ambas ramas sean demasiado complejas que los conflictos\nterminan apareciendo. Al igual que <code class=\"language-text\">merge</code>, los conflictos deben ser solucionados\naunque pude hacerse de manera interactive. <code class=\"language-text\">rebase</code> permite que hacer en caso\nde conflicto: solucionarlos o abortar acción. Abajo se muestra una lista con las\nacciones disponibles en caso de conflicto.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase --continue <span class=\"token comment\"># follow rebase</span>\n<span class=\"token function\">git</span> rebase --skip     <span class=\"token comment\"># jump current conflict</span>\n<span class=\"token function\">git</span> rebase —-abort    <span class=\"token comment\"># stop rebase and leave things as they were</span>\n<span class=\"token function\">git</span> rebase --quit     <span class=\"token comment\"># like abort but keeping the committed changes</span></code></pre></div>\n<h2>Forzando <em>push</em></h2>\n<p>Puede pasar cuando se está haciendo un <em>rebase</em>, el repositorio remoto rechaza\nlos nuevos cambios el hecho del propio <em>rebase</em>. La mensaje devuelto dice algo\nasí como que la rama local está por detrás de la remota.</p>\n<p>Cuando <code class=\"language-text\">rebase</code> ha sido llevado a cabo, los cambios provenientes de la rama de\norigen son situados antes de la pila de commits pertenecientes a la rama de trabajo,\ndesincronizando la rama homólogo en remoto. En este caso particular, el mensaje es\nalgo confuso, nos pide actualizar desde remote cuando en realidad no es así. </p>\n<p>A finde de solventar este problema, el comando <code class=\"language-text\">push</code> puede ser forzado usando la\nopción <code class=\"language-text\">--force</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push --force</code></pre></div>\n<p><strong>Nunca, pero nunca, se debe forzar una acción <em>push</em> en una rama colaborativa</strong>.</p>","frontmatter":{"title":"Más allá de merge","date":"May 05, 2019","translations":["en","beyond-merge"]},"fields":{"readingTime":{"text":"4 min read","minutes":3.85}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/es/mas-alla-de-merge/","language":"es","previous":null,"next":null}}