{"data":{"config":{"html":"<p>Enrique Arias’ personal blog.\n<br />\n<span style=\"font-size: 0.9em; color: gray;\">Developer and occasional writer among other things.</span></p>","fields":{"slug":"/"},"frontmatter":{"title":"Nocturnal Notes","language":"en"}},"markdownRemark":{"id":"2bf3b2a6-75d9-5b43-8e3d-b92865be7835","excerpt":"Everyone who has spent some time working with git irremediably knows about \nmerging. Suppose we have a branches called A coming from master…","html":"<p>Everyone who has spent some time working with git irremediably knows about\nmerging. Suppose we have a branches called A coming from master. The merge\ncommand brings the changes carried in A into master. It does works fine,\nchanges are placed ahead in the master branch.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">71a621b <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> master, A<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> A <span class=\"token function\">file</span> updated\n2dc6065 <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> new A <span class=\"token function\">file</span>\n76a1097 Demo <span class=\"token function\">file</span> updated\na31e004 README updated\n44d4c5b New README <span class=\"token function\">file</span>\nee42779 New demo <span class=\"token function\">file</span></code></pre></div>\n<p>The log reflects an incremental order of commits, or put in other words,\nthe commits are shown in the same order were added. A timeline of changes.</p>\n<p>When these modifications have happened at the same time, which is not as\nrarely as it seems,  the merge strategy cannot do a fast-forward update\n(bring changes ahead). Because changes did happened in the same time frame,\nthe merge command makes use of a recursive strategy in order to mix A and B\ncommits.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">057a856 <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> master<span class=\"token punctuation\">)</span> Merge branch <span class=\"token string\">'B'</span>\n71a621b <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> A <span class=\"token function\">file</span> updated\n1ac6aff <span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> B <span class=\"token function\">file</span> updated\n2dc6065 <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> new A <span class=\"token function\">file</span>\nd657116 <span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> new B <span class=\"token function\">file</span>\n76a1097 Demo <span class=\"token function\">file</span> updated\na31e004 README updated\n44d4c5b New README <span class=\"token function\">file</span>\nee42779 New demo <span class=\"token function\">file</span></code></pre></div>\n<p>Interlaced commits don’t keep proper track of branching blocks. There is a way\nto prevent this scenario once a feature is completed. Instead of merging the\nwhole bunch of commits, a better option is pushing the changes into master (or\ndevelop) as a unique commit with a descriptive message. This approach improves\nreadability and traceability of the git log.</p>\n<p>Perhaps for personal or one-man sized projects is not too important (is better\nkeeping good habits, though) having a strict sorted timeline of events. But\nwhen comes to big teams where each feature needs to be perfectly isolated and\ntagged an unsorted log history would make the difference between mayhem and\nharmony.</p>\n<p>For those newbies in git (and whose did not find much time to dive into)\nthere’s more than only merging. Let’s go beyond merge.</p>\n<h2>Rebase</h2>\n<p>Unlike merge, rebase allows to keep track of those related commits blocks by\ndoing the merge based on branch feature. While the origin branch’s history\nkeeps linear, the new feature commits are placed just ahead, maintaining a\nmore coherent log.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">        B1———B2\n       /\nA1———A2———A3———A4</code></pre></div>\n<p>This is convenient in order to bring the latest changes from master into our\nfeature branch. rebase permits removing momentarily the current commits (the\nones that are not present in master), put in place the new changes and install\non top feature commits again.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">                  B1———B2\n                 /\nA1———A2———A3———A4</code></pre></div>\n<p>While updating the branch is intended to be carried out as often as possible,\nsometimes can happen the differences between both branches are too complex that\nconflicts arise. As with merge, conflicts must be resolved and let git know how\nto proceed by using the next commands.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">git</span> rebase --continue <span class=\"token comment\"># follow rebase</span>\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> rebase --skip     <span class=\"token comment\"># jump current conflict</span>\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> rebase —-abort    <span class=\"token comment\"># stop rebase and leave things as thet were</span></code></pre></div>","frontmatter":{"title":"Beyond Merge","date":"May 01, 2019","translations":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/beyond-merge/","language":"en","previous":{"fields":{"slug":"/hi-folks/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}