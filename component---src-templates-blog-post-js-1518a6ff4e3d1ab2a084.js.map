{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Bio.js","webpack:///./src/components/LanguageSwitcher.js","webpack:///./src/components/Layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","siteBio","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","location","config","translations","frontmatter","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","lang","language","meta","name","content","title","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_twin_peaks__WEBPACK_IMPORTED_MODULE_1__","typography_theme_twin_peaks__WEBPACK_IMPORTED_MODULE_1___default","TwinPeaks","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","backgroundImage",".bio p","p","typography","Typography","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Bio","react__WEBPACK_IMPORTED_MODULE_1___default","className","src","alt","marginRight","width","height","borderRadius","LanguageSwitcher","_this$props","react_default","gatsby_browser_entry","fontSize","allMarkdownRemark","edges","map","node","translationLink","translationIndex","findIndex","v","react","key","textDecoration","language_label","_1164950830","Layout","header","color","marginLeft","maxWidth","components_LanguageSwitcher"],"mappings":"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","file":"component---src-templates-blog-post-js-1518a6ff4e3d1ab2a084.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link,graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, `data.config.frontmatter.title`)\n    const siteBio = get(this, 'props.data.config.html')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} config={this.props.data.config} translations={post.frontmatter.translations}>\n        <Helmet\n          htmlAttributes={{ lang: this.props.pageContext.language }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-.625),\n          }}\n        >\n          {post.frontmatter.date}\n          &nbsp;&nbsp;·&nbsp;&nbsp;\n          {post.fields.readingTime.text}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio>\n          <div dangerouslySetInnerHTML={{ __html: siteBio }} />\n        </Bio>\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {\n              previous &&\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            }\n          </li>\n          <li>\n            {\n              next &&\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            }\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $language: String!) {\n    config:markdownRemark(frontmatter: {\n      language: { eq: $language }\n      type: { eq: \"language\" }\n    }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        translations\n      }\n      fields {\n        readingTime {\n          text\n          minutes\n        }\n      }\n    }\n  }\n`\n","import Typography from 'typography'\nimport TwinPeaks from 'typography-theme-twin-peaks'\n\nTwinPeaks.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n    backgroundImage: 'none',\n  },\n  '.bio p': {\n    marginBottom: 0,\n  },\n  'p': {\n    marginBottom: '1rem',\n  }\n})\n\nconst typography = new Typography(TwinPeaks)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\n\nclass Bio extends React.Component {\n  render() {\n    const { children } = this.props\n    return (\n      <div\n        className=\"bio\"\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src=\"https://avatars1.githubusercontent.com/u/510375\"\n          alt={`Enrique Arias`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '25%',\n          }}\n        />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Bio\n","import React, { Fragment } from 'react'\nimport { Link, StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from '../utils/typography'\n\nclass LanguageSwitcher extends React.Component {\n  render() {\n    const { language, translations } = this.props\n    return (\n      <StaticQuery\n        query={graphql`\n          query LanguageSwitcherQuery {\n            allMarkdownRemark(filter: { frontmatter: { type: {eq: \"language\"}}}) {\n              edges {\n                node {\n                  fields {\n                    slug\n                  }\n                  frontmatter {\n                    language\n                    language_label\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <p style={{\n            fontSize: '.9em',\n            marginBottom: rhythm(1.5),\n          }}>\n            {data.allMarkdownRemark.edges.map(({ node }) => {\n              if (node.frontmatter.language === language) {\n                return null\n              } else {\n                let translationLink = node.fields.slug\n                if (translations) {\n                  const translationIndex = translations.findIndex(v => v === node.frontmatter.language)\n                  if (translationIndex !== -1) {\n                    translationLink = translations[translationIndex+1]\n                  }\n                }\n                return (\n                  <Fragment\n                    key={translationLink}\n                  >\n                    Also available in&nbsp;\n                    <Link\n                      style={{\n                      boxShadow: 'none',\n                      textDecoration: 'none',\n                    }} to={translationLink}>\n                      {node.frontmatter.language_label}\n                    </Link>\n                  </Fragment>\n                )\n              }\n            })}\n          </p>\n        )}\n      />\n    )\n  }\n}\n\nexport default LanguageSwitcher\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport LanguageSwitcher from './LanguageSwitcher'\n\nimport { rhythm } from '../utils/typography'\n\nimport '../assets/style.css'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, config, children, translations } = this.props\n    let header\n\n    if (`${__PATH_PREFIX__}${config.fields.slug}` === location.pathname) {\n      header = (\n        <h1\n          style={{\n            marginBottom: rhythm(.25),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              backgroundImage: 'none',\n              boxShadow: 'none',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n            to={config.fields.slug}\n          >\n            {config.frontmatter.title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n              backgroundImage: 'none',\n            }}\n            to={'/'}\n          >\n            {config.frontmatter.title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        <LanguageSwitcher\n          language={config.frontmatter.language}\n          translations={translations}\n        />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}